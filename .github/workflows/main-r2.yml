name: R2

on:
  workflow_dispatch:
  schedule:
     - cron: '0 */4 * * *'  # UTC 22:00 触发，北京时间 6:00

jobs:
  upload-to-r2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install puppeteer
        run: npm install puppeteer

      - name: Run Puppeteer to fetch Clash.txt
        env:
          TARGET_URL: "https://subapi.140407.xyz/sub?target=v2ray&url=https%3A%2F%2Fys.jiedianxielou.workers.dev&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2Fcmliu%2FACL4SSR%2Fmain%2FClash%2Fconfig%2FACL4SSR_Online.ini&emoji=true&list=false&xudp=false&udp=false&tfo=false&expand=true&scv=false&fdn=false"
          OUTPUT_FILE: "Clash1.txt"
        run: node fetch_clash.js

      - name: Install AWS CLI
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          pip3 install awscli --upgrade

      - name: Upload Clash.txt to Cloudflare R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_ENDPOINT_URL: ${{ secrets.CLOUDFLARE_R2_ENDPOINT }}
          BUCKET_NAME: ${{ secrets.CLOUDFLARE_R2_BUCKET_NAME }}
        run: |
          aws s3 cp Clash1.txt s3://$BUCKET_NAME/Clash1.txt --endpoint-url $AWS_ENDPOINT_URL

  cleanup-workflow-runs:
    runs-on: ubuntu-latest
    needs: upload-to-r2

    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Delete completed workflow runs
        env:
          GH_TOKEN: ${{ secrets.GT_TOKEN }}
        run: |
          echo "Fetching completed workflow runs..."
          RUN_IDS=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=100" \
            | jq '.workflow_runs[] | select(.status == "completed") | .id')
          for run_id in $RUN_IDS; do
            echo "Deleting run ID: $run_id"
            curl -s -X DELETE -H "Authorization: token $GH_TOKEN" \
