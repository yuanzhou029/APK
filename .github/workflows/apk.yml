name: Sign and Release APK

on:
  workflow_dispatch:

jobs:
  sign:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # 设置为您项目所需的 Java 版本

      - name: Build the project
        run: ./gradlew assembleRelease

      - name: Sign APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
            -keystore my-release-key.jks \
            -storepass $KEYSTORE_PASSWORD \
            -keypass $KEY_PASSWORD \
            app/build/outputs/apk/release/app-release-unsigned.apk \
            $KEY_ALIAS

      - name: Zip signed APK
        run: |
          mkdir signed_apk
          cp app/build/outputs/apk/release/app-release-unsigned.apk signed_apk/
          cp app/build/outputs/apk/release/app-release.apk signed_apk/
          zip -r signed_apk.zip signed_apk/

      - name: Obfuscate APK (Optional)
        run: |
          # 在这里插入您加固 APK 的命令
          # 例如：./path/to/your/obfuscation-tool signed_apk/app-release.apk

      - name: Upload signed APK
        uses: actions/upload-artifact@v2
        with:
          name: signed-apk
          path: signed_apk.zip

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0  # 替换为您的版本号
          release_name: Release v1.0.0  # 替换为您的发布名称
          body: |
            这是一个自动生成的发布版本。
          files: 
            - signed_apk.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
