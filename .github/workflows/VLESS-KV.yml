name: VLESS-KV

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 22 * * *'  # UTC 22:00 触发，北京时间 6:00
    - cron: '0 8 * * *'  # UTC 8:00 触发，北京时间 16:00
    

jobs:
  upload-to-r2:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许提交代码到仓库

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # 指定Python版本
        

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests telethon awscli beautifulsoup4 # 合并重复的依赖安装（移除冗余命令）

      - name: Clear links.txt content
        run: echo -n "" > links.txt 

      - name: Run Telegram scraping script
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}
        run: python tg-url.py  # 调整为实际路径（如文件在根目录无需修改）

      - name: Run core Python scripts
        run: |
          python tg@pgkj0402.py       # 运行订阅获取脚本（需确保文件存在）
          python get_token.py         # 运行Token获取脚本（需确保文件存在)
          python MB.py                # 米贝分享的订阅链接
          python yz.py                # 运行去重检查脚本（对links.txt文件的链接进行去重和检测）

      - name: Sync to Cloudflare KV
        env:
          CF_EMAIL: ${{ secrets.CF_EMAIL }}
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_KV_NAMESPACE_ID: ${{ secrets.CF_KV_NAMESPACE_ID }}
          CF_KV_KEY: "LINK.txt"
        run: python kv.py  # 确保kv.py存在且路径正确

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add links.txt  # 仅提交修改的文件（避免意外提交）
          if [ -n "$(git status --porcelain)" ]; then  # 仅当有修改时提交
            git commit -m "Update links.txt with valid URLs"
            git push
          else
            echo "No changes to commit"
          fi

  cleanup-workflow-runs:
    runs-on: ubuntu-latest
    needs: upload-to-r2

    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Delete completed workflow runs
        env:
          GH_TOKEN: ${{ secrets.GT_TOKEN }}
        run: |
          echo "Fetching completed workflow runs..."
          RUN_IDS=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=100" \
            | jq '.workflow_runs[] | select(.status == "completed") | .id')
          for run_id in $RUN_IDS; do
            echo "Deleting run ID: $run_id"
            curl -s -X DELETE -H "Authorization: token $GH_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"
          done
